# TypeProf 0.21.11

# Classes
module Baykit
  module BayServer
    module Common
      module Multiplexer
        def add_rudder_state: (Rudders::Rudder rd, Agent::Multiplexer::RudderState st) -> void
        def get_rudder_state: (Rudders::Rudder rd) -> Agent::Multiplexer::RudderState
        def get_transporter: (Rudders::Rudder rd) -> Agent::Multiplexer::Transporter
        def req_accept: (Rudders::Rudder rd) -> void
        def req_connect: (Rudders::Rudder rd, untyped adr) -> void
        def req_read: (Rudders::Rudder rd) -> void
        def req_write: (Rudders::Rudder rd, String buf, Addrinfo adr, Object tag, untyped lis) -> void
        def req_end: (Rudders::Rudder rd) -> void
        def req_close: (Rudders::Rudder rd) -> void
        def cancel_read: (untyped st) -> void
        def cancel_write: (untyped st) -> void
        def next_accept: (untyped st) -> void
        def next_read: (untyped st) -> void
        def next_write: (untyped st) -> void
        def shutdown: -> void
        def is_non_blocking: -> bool
        def use_async_api: -> bool
        def consume_oldest_unit: (untyped st) -> bool
        def close_rudder: (untyped st) -> void
        def is_busy: -> bool
        def on_busy: -> void
        def on_free: -> void
      end
    end
  end
end
