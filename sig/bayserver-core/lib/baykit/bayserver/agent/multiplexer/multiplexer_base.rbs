# TypeProf 0.21.11

# Classes
module Baykit
  module BayServer
    module Agent
      module Multiplexer
        class MultiplexerBase
          include Common::Multiplexer

          @agent: untyped
          @channel_count: Integer
          @rudders: Hash[Object, RudderState]
          @rudders_lock: Thread::Mutex
          @lock: Thread::Mutex

          def initialize: (untyped agt) -> void
          def add_rudder_state: (Rudders::Rudder rd, RudderState st) -> void
          def get_rudder_state: (Rudders::Rudder rd) -> RudderState
          def get_transporter: (Rudders::Rudder rd) -> untyped
          def consume_oldest_unit: (RudderState st) -> bool
          def close_rudder: (RudderState st) -> nil
          def is_busy: -> bool
          def find_rudder_state_by_key: (Object key) -> nil
          def remove_rudder_state: (Rudders::Rudder rd) -> nil
          def close_timeout_sockets: -> void
          def close_all: -> void
        end
      end
    end
  end
end
